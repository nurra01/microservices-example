version: '3'
services:
  zoo:
    image: wurstmeister/zookeeper
    hostname: zoo
    container_name: kafka-zoo
    ports:
      - "2181:2181"
    expose:
      - "2118"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888

  kafka:
    image: wurstmeister/kafka:2.12-2.2.0
    hostname: kafka
    container_name: kafka-server
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: "100"
      KAFKA_NUM_PARTITIONS: "1"
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ADVERTISED_PORT: 9092
    expose:
      - "9092"
    depends_on:
      - zoo
  
  database:
    container_name: db-storage
    image: postgres # use latest official postgres version
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: kafka-example

  redis:
    image: redis
    hostname: redis
    container_name: redis-server
    ports:
      - "6379:6379"
    expose: 
      - "6379"

  user-service:
    build: ./services/user
    image: user-service
    container_name: user-service
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - redis

  redis-storage-service:
    build: ./services/redis-storage
    image: redis-storage-service
    container_name: redis-storage-service
    depends_on: 
      - kafka
      - redis
  
  user-storage-service:
    build: ./services/user-storage
    image: user-storage-service
    container_name: user-storage-service
    depends_on: 
      - kafka
  
  email-service:
    build: ./services/email
    image: email-service
    container_name: email-service
    depends_on: 
      - kafka

  client:
    build: ./client
    image: client-app
    container_name: client-app
    ports:
      - "3000:3000"
    environment:
      - CI=true
    depends_on: 
      - user-service